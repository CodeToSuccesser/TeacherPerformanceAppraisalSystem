<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.tpas</groupId>
		<artifactId>tpas_backend</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>

	<artifactId>launcher</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>launcher</name>
	<description>启动模块</description>

	<dependencies>
		<!-- 引入report_bussiness -->
		<dependency>
			<groupId>com.tpas</groupId>
			<artifactId>report-business</artifactId>
			<version>${com.tpas.report.business.version}</version>
			<scope>compile</scope>
		</dependency>
		<!-- 引入management -->
		<dependency>
			<groupId>com.tpas</groupId>
			<artifactId>management</artifactId>
			<version>${com.tpas.management.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- 插件maven-clean-plugin，用于在编译前，清除之前编译的文件、文件夹等，避免残留之前的内容 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<filesets>
						<fileset>
							<!-- 前端资源目录-->
							<directory>src/main/resources/template</directory>
						</fileset>
						<fileset>
							<!-- 前端资源目录-->
							<directory>src/main/resources/static</directory>
						</fileset>
						<fileset>
							<!-- Vue项目打包自动生成的dist目录 -->
							<directory>${project.parent.basedir}/tpas_web/dist</directory>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

			<!--frontend-maven-plugin为项目本地下载/安装Node和NPM，运行npm install命令-->
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.6</version>
				<configuration>
					<workingDirectory>${project.parent.basedir}/tpas_web</workingDirectory>
				</configuration>
				<executions>
					<execution>
						<id>install node and npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<configuration>
							<nodeVersion>v12.18.2</nodeVersion>
							<npmVersion>6.14.5</npmVersion>
						</configuration>
					</execution>
					<execution>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<phase>generate-resources</phase>
						<configuration>
							<arguments>install</arguments>
						</configuration>
					</execution>
					<execution>
						<id>npm run build</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>run build</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!--资源插件，主要为了从前端项目里复制打包好的文件到springboot项目-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>copy static</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<!-- 复制前端打包文件到这里 -->
							<outputDirectory>src/main/resources/static</outputDirectory>
							<overwrite>true</overwrite>
							<resources>
								<resource>
									<!-- 从前端打包的目录dist进行指定文件、文件夹内容的复制-->
									<directory>${project.parent.basedir}/tpas_web/dist/static</directory>
									<includes>
										<include>css/</include>
										<include>fonts/</include>
										<include>img/</include>
										<include>js/</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy templates</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<!-- 复制前端打包文件到这里 -->
							<outputDirectory>src/main/resources/template</outputDirectory>
							<overwrite>true</overwrite>
							<resources>
								<resource>
									<!-- 从前端打包的目录dist进行指定文件、文件夹内容的复制-->
									<directory>${project.parent.basedir}/tpas_web/dist</directory>
									<includes>
										<include>index.html</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>

				</executions>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<!-- 指定该Main Class为全局的唯一入口 -->
					<mainClass>com.launcher.tpas.Main</mainClass>
					<layout>ZIP</layout>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal><!--可以把依赖的包都打包到生成的Jar包中-->
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
